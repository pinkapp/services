<?xml version="1.0" encoding="UTF-8"?>
<!-- - Middle tier application context definition for the image database. -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	<import resource="applicationContext-service.xml"/>
    <context:component-scan base-package="cc.ywxm.commonservice" />
	<context:property-placeholder location="classpath:conf/db_config.properties" />

	<!-- Local C3P0 DataSource that works in any environment -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 空闲连接测试时间（秒） -->
		<property name="idleConnectionTestPeriod" value="1800" />
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
    <bean id="activationCodeServiceImpl" class="cc.ywxm.commonservice.service.impl.ActivationCodeServiceImpl">
    </bean>
    <!-- jpa -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!--<property name="persistenceXmlLocation" value="classpath:/META-INF/persistence.xml" />
        <property name="dataSource" ref="dataSource" />
        <property name="persistenceUnitName" value="hibernate-jpa" />-->
        <!-- 选配属性 -->
        <!--<property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter">
                <property name="showSql" value="false"/>
                <property name="generateDdl" value="false"/>
                <property name="databasePlatform" value="org.apache.openjpa.jdbc.sql.MySQLDictionary"/>
            </bean>
        </property>-->
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="packagesToScan" value="cc.ywxm.commonservice.model"/><!--待扫描的实体类包，不再需要persistence.xml了-->
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>
    <!--实现JPA的适配器-->
    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
    </bean>
    <!-- Jpa 事务配置 -->
    <!--<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>-->
    <!-- rmi -->
    <!--<bean id="exporter" class="org.springframework.remoting.rmi.RmiServiceExporter">
        <property name="service" ref="activationCodeServiceImpl"/>
        <property name="serviceName" value="activationCodeService"/>
        <property name="serviceInterface" value="cc.ywxm.commonservice.service.ActivationCodeService"/>
        <property name="registryPort" value="9111"/>
        <property name="servicePort" value="10023"/>
    </bean>-->
    <!-- jdbc 事务配置 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />
</beans>
